[server]
hostname = "localhost"
node_ip = "127.0.0.1"
#offset=0
mode = "single" #single or ha
base_path = "${carbon.protocol}://${carbon.host}:${carbon.management.port}"
#discard_empty_caches = false
server_role = "default"

[super_admin]
username = "admin"
password = "admin"
create_admin_account = true

[user_store]
type = "database_unique_id"

[database.apim_db]
type = "h2"
url = "jdbc:h2:./repository/database/WSO2AM_DB;AUTO_SERVER=TRUE;DB_CLOSE_ON_EXIT=FALSE"
username = "wso2carbon"
password = "wso2carbon"

[database.shared_db]
type = "h2"
url = "jdbc:h2:./repository/database/WSO2SHARED_DB;DB_CLOSE_ON_EXIT=FALSE"
username = "wso2carbon"
password = "wso2carbon"

[keystore.tls]
file_name =  "wso2carbon.jks"
type =  "JKS"
password =  "wso2carbon"
alias =  "wso2carbon"
key_password =  "wso2carbon"

#[keystore.primary]
#file_name =  "wso2carbon.jks"
#type =  "JKS"
#password =  "wso2carbon"
#alias =  "wso2carbon"
#key_password =  "wso2carbon"

#[keystore.internal]
#file_name =  "wso2carbon.jks"
#type =  "JKS"
#password =  "wso2carbon"
#alias =  "wso2carbon"
#key_password =  "wso2carbon"

[[apim.gateway.environment]]
name = "Production and Sandbox"
type = "hybrid"
display_in_api_console = true
description = "This is a hybrid gateway that handles both production and sandbox token traffic."
show_as_token_endpoint_url = true
service_url = "https://localhost:${mgt.transport.https.port}/services/"
username= "${admin.username}"
password= "${admin.password}"
ws_endpoint = "ws://localhost:9099"
wss_endpoint = "wss://localhost:8099"
http_endpoint = "http://localhost:${http.nio.port}"
https_endpoint = "https://localhost:${https.nio.port}"

#[apim.cache.gateway_token]
#enable = true
#expiry_time = "900s"

#[apim.cache.resource]
#enable = true
#expiry_time = "900s"

#[apim.cache.km_token]
#enable = false
#expiry_time = "15m"

#[apim.cache.recent_apis]
#enable = false

#[apim.cache.scopes]
#enable = true

#[apim.cache.publisher_roles]
#enable = true

#[apim.cache.jwt_claim]
#enable = true
#expiry_time = "15m"

#[apim.cache.tags]
#expiry_time = "2m"

#[apim.analytics]
#enable = false
#store_api_url = "https://localhost:7444"
#username = "$ref{super_admin.username}"
#password = "$ref{super_admin.password}"
#event_publisher_type = "default"
#event_publisher_impl = "org.wso2.carbon.apimgt.usage.publisher.APIMgtUsageDataBridgeDataPublisher"
#publish_response_size = true

#[[apim.analytics.url_group]]
#analytics_url =["tcp://analytics1:7611","tcp://analytics2:7611"]
#analytics_auth_url =["ssl://analytics1:7711","ssl://analytics2:7711"]
#type = "loadbalance"

#[[apim.analytics.url_group]]
#analytics_url =["tcp://analytics1:7612","tcp://analytics2:7612"]
#analytics_auth_url =["ssl://analytics1:7712","ssl://analytics2:7712"]
#type = "failover"

#[apim.key_manager]
#service_url = "https://localhost:${mgt.transport.https.port}/services/"
#username = "$ref{super_admin.username}"
#password = "$ref{super_admin.password}"
#pool.init_idle_capacity = 50
#pool.max_idle = 100
#key_validation_handler_type = "default"
#key_validation_handler_type = "custom"
#key_validation_handler_impl = "org.wso2.carbon.apimgt.keymgt.handlers.DefaultKeyValidationHandler"

#[apim.idp]
#server_url = "https://localhost:${mgt.transport.https.port}"
#authorize_endpoint = "https://localhost:${mgt.transport.https.port}/oauth2/authorize"
#oidc_logout_endpoint = "https://localhost:${mgt.transport.https.port}/oidc/logout"
#oidc_check_session_endpoint = "https://localhost:${mgt.transport.https.port}/oidc/checksession"

[apim.jwt]
enable = true
encoding = "base64" # base64,base64url
#generator_impl = "org.wso2.carbon.apimgt.keymgt.token.JWTGenerator"
claim_dialect = "http://wso2.org/claims"
convert_dialect = false
header = "X-JWT-Assertion"
signing_algorithm = "SHA256withRSA"
enable_user_claims = true
claims_extractor_impl = "org.wso2.carbon.apimgt.impl.token.ExtendedDefaultClaimsRetriever"

[apim.jwt.gateway_generator]
impl = "org.wso2.healthcare.apim.gateway.jwt.generator.HealthcareGatewayJWTGenerator"

#[apim.oauth_config]
#enable_outbound_auth_header = false
#auth_header = "Authorization"
#revoke_endpoint = "https://localhost:${https.nio.port}/revoke"
#enable_token_encryption = false
#enable_token_hashing = false

#[apim.devportal]
#url = "https://localhost:${mgt.transport.https.port}/devportal"
#enable_application_sharing = false
#if application_sharing_type, application_sharing_impl both defined priority goes to application_sharing_impl
#application_sharing_type = "default" #changed type, saml, default #todo: check the new config for rest api
#application_sharing_impl = "org.wso2.carbon.apimgt.impl.SAMLGroupIDExtractorImpl"
#display_multiple_versions = false
#display_deprecated_apis = false
#enable_comments = true
#enable_ratings = true
#enable_forum = true
#enable_anonymous_mode=true

[apim.cors]
allow_origins = "*"
allow_methods = ["GET","PUT","POST","DELETE","PATCH","OPTIONS"]
allow_headers = ["authorization","Access-Control-Allow-Origin","Content-Type","SOAPAction","apikey", "testKey"]
allow_credentials = false

[apim.throttling]
enable_unlimited_tier = false
enable_policy_deploy = true
policy_deploy.username = "$ref{super_admin.username}"
policy_deploy.password = "$ref{super_admin.password}"
service_url = "https://localhost:${mgt.transport.https.port}/services/"
#enable_data_publishing = true
#enable_blacklist_condition = true
#enable_persistence = true
#throttle_decision_endpoints = ["tcp://localhost:5672","tcp://localhost:5672"]

#[apim.throttling.blacklist_condition]
#start_delay = "5m"
#period = "1h"

#[apim.throttling.jms]
#start_delay = "5m"

#[apim.throttling.event_sync]
#hostName = "0.0.0.0"
#port = 11224

#[apim.throttling.event_management]
#hostName = "0.0.0.0"
#port = 10005

#[[apim.throttling.url_group]]
#traffic_manager_urls = ["tcp://localhost:9611","tcp://localhost:9611"]
#traffic_manager_auth_urls = ["ssl://localhost:9711","ssl://localhost:9711"]
#type = "loadbalance"

#[[apim.throttling.url_group]]
#traffic_manager_urls = ["tcp://localhost:9611","tcp://localhost:9611"]
#traffic_manager_auth_urls = ["ssl://localhost:9711","ssl://localhost:9711"]
#type = "failover"

#[apim.workflow]
#enable = false
#service_url = "https://localhost:9445/bpmn"
#username = "$ref{super_admin.username}"
#password = "$ref{super_admin.password}"
#callback_endpoint = "https://localhost:${mgt.transport.https.port}/api/am/admin/v0.17/workflows/update-workflow-status"
#token_endpoint = "https://localhost:${https.nio.port}/token"
#client_registration_endpoint = "https://localhost:${mgt.transport.https.port}/client-registration/v0.17/register"
#client_registration_username = "$ref{super_admin.username}"
#client_registration_password = "$ref{super_admin.password}"

#data bridge config
#[transport.receiver]
#type = "binary"
#worker_threads = 10
#session_timeout = "30m"
#keystore.file_name = "$ref{keystore.tls.file_name}"
#keystore.password = "$ref{keystore.tls.password}"
#tcp_port = 9611
#ssl_port = 9711
#ssl_receiver_thread_pool_size = 100
#tcp_receiver_thread_pool_size = 100
#ssl_enabled_protocols = ["TLSv1","TLSv1.1","TLSv1.2"]
#ciphers = ["SSL_RSA_WITH_RC4_128_MD5","SSL_RSA_WITH_RC4_128_SHA"]

#[apim.notification]
#from_address = "APIM.com"
#username = "APIM"
#password = "APIM+123"
#hostname = "localhost"
#port = 3025
#enable_start_tls = false
#enable_authentication = true

#[apim.token.revocation]
#notifier_impl = "org.wso2.carbon.apimgt.keymgt.events.TokenRevocationNotifierImpl"
#enable_realtime_notifier = true
#realtime_notifier.ttl = 5000
#enable_persistent_notifier = true
#persistent_notifier.hostname = "https://localhost:2379/v2/keys/jti/"
#persistent_notifier.ttl = 5000
#persistent_notifier.username = "root"
#persistent_notifier.password = "root"

[[event_handler]]
name="userPostSelfRegistration"
subscriptions=["POST_ADD_USER"]

[service_provider]
sp_name_regex = "^[\\sa-zA-Z0-9._-]*$"

[database.local]
url = "jdbc:h2:./repository/database/WSO2CARBON_DB;DB_CLOSE_ON_EXIT=FALSE"

[[event_listener]]
id = "token_revocation"
type = "org.wso2.carbon.identity.core.handler.AbstractIdentityHandler"
name = "org.wso2.is.notification.ApimOauthEventInterceptor"
order = 1
[event_listener.properties]
notification_endpoint = "https://localhost:${mgt.transport.https.port}/internal/data/v1/notify"
username = "${admin.username}"
password = "${admin.password}"
'header.X-WSO2-KEY-MANAGER' = "default"

################################## Open-Healthcare related configuration Starts here ###################################

# Open rest API resources
[[apim.rest_api.allowed_uri]]
uri_path = "/api/healthcare/manage/registrations"
http_method = "POST"

[[apim.rest_api.allowed_uri]]
uri_path = "/api/healthcare/manage/registrations/form"
http_method = "POST"

[[apim.rest_api.allowed_uri]]
uri_path = "/api/healthcare/manage/validation/open"
http_method = "POST"

# Open-Healthcare cloud self-signup account datasource
[[datasource]]
id = "OHAccountDB"
type = "mysql"
url = "jdbc:mysql://localhost:3306/OHC_ACCOUNT_DB"
username = "dbadmin"
password = "dbadmin"
driver = "com.mysql.jdbc.Driver"
validationQuery = "SELECT 1"
pool_options.validationInterval = "30000"
pool_options.testOnBorrow = "true"
pool_options.defaultAutoCommit = "true"
pool_options.maxActive = "50"
pool_options.maxWait = "60000"

[[datasource]]
id = "OHRegistrationDB"
type = "mysql"
url = "jdbc:mysql://localhost:3306/OHC_REGISTRATION_DB"
username = "dbadmin"
password = "dbadmin"
driver = "com.mysql.jdbc.Driver"
validationQuery = "SELECT 1"
pool_options.validationInterval = "30000"
pool_options.testOnBorrow = "true"
pool_options.defaultAutoCommit = "true"
pool_options.maxActive = "50"
pool_options.maxWait = "60000"

# Open-Healthcare Configurations
[healthcare]

[healthcare.identity.claims]
patient_id_uri = "http://wso2.org/claims/username"

[healthcare.saas.account]
enable = false
account_datasource = "jdbc/OHAccountDB"
registration_datasource = "jdbc/OHRegistrationDB"

[healthcare.saas.account.pii_store]
store = "org.wso2.healthcare.apim.core.account.saas.InternalPIIStore"
# Configure custom PII Store
#store = "org.wso2.healthcare.apim.core.account.saas.WSO2RRSFPIIStore"
#parameters.server_url = "https://wso2.com/services/rest/ws/allocatehealthcarelead.json"
#parameters.username = "username"
#parameters.password = "password"
#parameters.retry_attempts = "4"
#parameters.http_client_so_timeout = "-1"
#parameters.http_client_connect_timeout = "-1"
#parameters.http_client_max_total = "100"
#parameters.http_client_default_max_per_route = "50"

[healthcare.saas.signup]
unique_email_account = false

[healthcare.saas.signup.workflow]
# Configure sign-up workflow
# Types available : default, BPMN
type = "default"
# If workflow type is BPMN uncomment below and configure
#process_definition_key = "OHAccountProvisioningWF"
#service_url = "https://localhost:9445/bpmn/"
#username = "admin"
#password = "admin"

[healthcare.alert]
# Alert types : log | publish (not supported ATM)
type = "log"
# Format of the log : structured | json
log_format = "structured"
escalation.enable = false
[healthcare.alert.escalation.workflow]
# Configure escalation workflow if alert escalation is enabled
#type = "BPMN"
#process_definition_key = "OHSomeName"
#service_url = "https://localhost:9445/bpmn/"
#username = "admin"
#password = "admin"

[healthcare.captcha]
enable = false
# Google reCAPTCHA settings
# reCaptcha API URL
api_url="https://www.google.com/recaptcha/api.js"
# reCaptcha verification URL
verify_url="https://www.google.com/recaptcha/api/siteverify"
# reCaptcha site key
site_key="6Lc8THgUAAAAAPekxT991FGFXRrsiPCMNv5PwZHB"
# reCaptcha secret key
secret_key="6Lc8THgUAAAAAEu83iOwSin_CSt6gqe97aa7EGFd"

[healthcare.fhir]
server_name = "WSO2 Open-healthcare Sandbox"
server_version = "1.0.0"

[healthcare.apihub.cache]
enable=false
#expiry time in seconds (default: 300)
expiry=300
capacity=10

[healthcare.apim.throttling]
#Disable standard product throttle policies in tenants (does not affect super tenant)
disable_standard_product_throttle_policies = false

[[healthcare.apim.throttling.tier.application]]
name = "5PerMin"
display_name = "5PerMin"
description = "5 requests per minute"
policy.type = "requestCount"
policy.limit.request_count = "5"
policy.limit.unit_time = "1"
policy.limit.time_unit = "min"

[[healthcare.apim.throttling.tier.application]]
name = "10PerMin"
display_name = "10PerMin"
description = "10 requests per minute"
policy.type = "requestCount"
policy.limit.request_count = "10"
policy.limit.unit_time = "1"
policy.limit.time_unit = "min"

[[healthcare.apim.throttling.tier.application]]
name = "15PerMin"
display_name = "15PerMin"
description = "15 requests per minute"
policy.type = "requestCount"
policy.limit.request_count = "15"
policy.limit.unit_time = "1"
policy.limit.time_unit = "min"

[healthcare.identity.claims]
patient_id_uri = "http://wso2.org/claims/patientId"
patient_id_key = "patientId"

#[healthcare.deployment.webapps]
#name = "Open Healthcare"
#name_container_css = ""
#terms_of_use = "https://wso2.com/terms-of-use"
#privacy_policy = "https://wso2.com/privacy-policy"
#cookie_policy = "https://wso2.com/cookie-policy"
#logo = "images/wso2-logo.svg"
#logoHeight = ""
#logoWidth = ""
#logo_container_css = ""
#title = "WSO2 Open Healthcare"
#favicon = "libs/theme/assets/images/favicon.ico"
#footer = "WSO2 Open Healthcare"
#footer_secondary_html = ""
#main_color = "#342382"

#[healthcare.deployment.webapps.authenticationendpoint]
#enable_selfsignup = true
#selfsignup_url = ""
# Name of deployment to mentioned in the poicy disclaimer.
# The result will be : Usage of <signin_disclaimer_portal_name> is subject to the Terms of Use, Privacy Policy, and Cookie Policy.
#signin_disclaimer_portal_name="WSO2 Open Healthcare"

#[healthcare.deployment.webapps.accountrecovery]
#signup_flow.username_info_enable = false
# Message to display at the end of successful self sign-up
#signup_flow.success_message="User registration completed successfully"

#[[apim.devportal.application_attributes]]
#required=true
#hidden=false
#name="Terms and Conditions Secure URL"
#description="Provide a secure URL where users can review your terms and conditions prior to authorizing access to their data."

#################################### Open-Healthcare related configuration end here ###################################
